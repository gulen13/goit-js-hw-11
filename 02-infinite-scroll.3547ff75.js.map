{"mappings":"qhBAAA,IAAAA,EAAAC,EAAA,S,uCAMA,MAAMC,EAAeC,SAASC,cAAc,gBACtCC,EAAgBF,SAASC,cAAc,YAEvCE,EAAa,IAAI,EAAAC,EAAAC,YAEvB,IAAIC,EAAW,IAAIC,EAAAC,GAAJ,CAAmB,aAAc,CAC9CC,aAAc,MACdC,aAAc,MAmEhB,MAAMC,EAAiB,KACAX,SAASY,gBAAgBC,wBAC7BC,OAASd,SAASY,gBAAgBG,aAAe,KA1B3CC,WACvBb,EAAWc,gBAEX,IACE,MAAQC,KAAMC,EAAQC,UAAWC,EAAeC,MAAOC,SAAmBpB,EAAWqB,eAErF,EAAAC,EAAAC,oBAAmBP,GAEnBb,EAASqB,UAELN,EAAgBlB,EAAWyB,KAAOzB,EAAW0B,UAC/ChC,EAAAiC,OAAOC,KAAK,6DAA8D,CAAEC,cAAc,IAC1FC,OAAOC,oBAAoB,SAAUvB,G,CAGvC,MAAOwB,GACPC,QAAQC,IAAIF,E,GAWZG,EAAkB,EAItBvC,EAAawC,iBAAiB,UAvEHvB,MAAMwB,IAC/BA,EAAMC,iBACNtC,EAAWuC,YA2DXxC,EAAcyC,UAAY,GAxD1B,MAAMC,EAAcJ,EAAMK,cAAcC,SAAsB,YAAEC,MAAMC,OAAOC,cAG7E,GAFA9C,EAAW+C,MAAQN,EAEC,KAAhBA,EAGF,OAFA7C,EAAaoD,aACbtD,EAAAiC,OAAOC,KAAK,8BAA+B,CAAEC,cAAc,IAI7D,IACE,MAAQd,KAAMC,EAAQC,UAAWC,EAAeC,MAAOC,SAAmBpB,EAAWqB,cAErF,GAAiB,IAAbD,EAEF,YADA1B,EAAAiC,OAAOsB,QAAQ,2EAA4E,CAAEpB,cAAc,IAI7GnC,EAAAiC,OAAOuB,QAAQ,oBAAoBhC,YAAyB,CAAEW,cAAc,KAE5E,EAAAP,EAAAC,oBAAmBP,GAEnBb,EAASqB,UAELN,EAAgBlB,EAAWyB,KAAOzB,EAAW0B,QAC/CI,OAAOC,oBAAoB,SAAUvB,GAErCsB,OAAOM,iBAAiB,SAAU5B,E,CAGpC,MAAOwB,GACPC,QAAQC,IAAIF,E,KAqChBF,OAAOM,iBAAiB,SAAU5B","sources":["src/partials/JS/02-infinite-scroll.js"],"sourcesContent":["import { Notify } from 'notiflix/build/notiflix-notify-aio';\nimport { PixabayAPI } from './pixabay-API';\nimport { createGalleryCards } from './createGallery';\nimport SimpleLightbox from \"simplelightbox\";\nimport \"simplelightbox/dist/simple-lightbox.min.css\";\n\nconst searchFormEl = document.querySelector('.search-form');\nconst galleryListEl = document.querySelector('.gallery');\n\nconst pixabayApi = new PixabayAPI();\n\nlet lightbox = new SimpleLightbox('.gallery a', {\n  captionsData: \"alt\",\n  captionDelay: 250,\n});\n\nconst onSearchFormSubmit = async event => {\n  event.preventDefault();\n  pixabayApi.pageReset();\n  clearMarkup();\n\n  const searchQuery = event.currentTarget.elements['searchQuery'].value.trim().toLowerCase();\n  pixabayApi.query = searchQuery;\n\n  if (searchQuery === '') {\n    searchFormEl.reset();\n    Notify.info('Please enter search request', { clickToClose: true, });\n    return;\n  }\n\n  try {\n    const { hits: images, totalHits: totalQuantity, total: quantity } = await pixabayApi.fetchPhotos();\n\n    if (quantity === 0) {\n      Notify.failure('Sorry, there are no images matching your search query. Please try again.', { clickToClose: true, });\n      return;\n    }\n\n    Notify.success(`Hooray! We found ${totalQuantity} images.`, { clickToClose: true, });\n\n    createGalleryCards(images);\n\n    lightbox.refresh();\n\n    if (totalQuantity < pixabayApi.page * pixabayApi.perPage) {\n      window.removeEventListener('scroll', infiniteScroll);\n    } else {\n      window.addEventListener('scroll', infiniteScroll);\n    }\n\n  } catch (error) {\n    console.log(error);\n  }\n\n};\n\nconst onInfiniteScroll = async () => {\n  pixabayApi.incrementPage();\n\n  try {\n    const { hits: images, totalHits: totalQuantity, total: quantity } = await pixabayApi.fetchPhotos();\n\n    createGalleryCards(images)\n\n    lightbox.refresh();\n\n    if (totalQuantity < pixabayApi.page * pixabayApi.perPage) {\n      Notify.info(\"We're sorry, but you've reached the end of search results.\", { clickToClose: true, });\n      window.removeEventListener('scroll', infiniteScroll);\n    }\n\n  } catch (error) {\n    console.log(error);\n  }\n};\n\nfunction clearMarkup() {\n  galleryListEl.innerHTML = '';\n}\n\nconst infiniteScroll = () => {\n  const documentRect = document.documentElement.getBoundingClientRect();\n  if (documentRect.bottom < document.documentElement.clientHeight + 200) {\n    onInfiniteScroll();\n  };\n};\n\nsearchFormEl.addEventListener('submit', onSearchFormSubmit);\nwindow.addEventListener('scroll', infiniteScroll);"],"names":["$iQIUW","parcelRequire","$803cbdc317d43cec$var$searchFormEl","document","querySelector","$803cbdc317d43cec$var$galleryListEl","$803cbdc317d43cec$var$pixabayApi","$gAwcD","PixabayAPI","$803cbdc317d43cec$var$lightbox","$parcel$interopDefault","$fZKcF","captionsData","captionDelay","$803cbdc317d43cec$var$infiniteScroll","documentElement","getBoundingClientRect","bottom","clientHeight","async","incrementPage","hits","images","totalHits","totalQuantity","total","quantity","fetchPhotos","$aTcYB","createGalleryCards","refresh","page","perPage","Notify","info","clickToClose","window","removeEventListener","error","console","log","$803cbdc317d43cec$var$onInfiniteScroll","addEventListener","event","preventDefault","pageReset","innerHTML","searchQuery","currentTarget","elements","value","trim","toLowerCase","query","reset","failure","success"],"version":3,"file":"02-infinite-scroll.3547ff75.js.map"}